{"version":3,"sources":["components/modal-window/modal-window.tsx","components/modal-window/style.module.css","containers/basket-page/style.module.css","components/basket-product/style.module.css","components/basket-button/style.module.css","components/basket-button/model.ts","components/basket-button/basket-button.tsx","components/basket-button/index.ts","components/basket-product/basket-product.tsx","containers/basket-page/basket-page.tsx"],"names":["ModalWindowType","ModalWindow","modalText","buttonText","switchShowPopap","handler","type","t","useTranslation","className","style","modal","onClick","colorScheme","ButtonColors","blue","buttonOffset","forBasket","lightgreen","overlay","module","exports","BasketButtonTypes","BasketButton","buttonType","rest","cn","main","BasketProduct","product","allProducts","dispatch","useDispatch","useState","modalWindowActive","changeModalWindowActive","showPopapDelete","basketProductsCard","to","URLs","url","id","basketProductsView","basketProductsImg","src","image","alt","localStorage","getItem","title","ru","en","basketProductsDescription","deleteProductsGroup","basketProductsCounting","basketProductsCount","minus","minusProductById","productsById","length","plus","plusProductById","basketProductsPrice","totalPriceForThisGroup","close","BasketPage","isLoginFromReducer","useSelector","user","isLogin","useLocalStorageInBasket","basket","totalCount","totalPrice","productsByGroup","Object","keys","map","key","setIsLogin","useEffect","showPopapClear","container","basketBody","basketTitle","basketToMainLink","green","basketText","basketLink","login","clearBasket","basketProductsTitle","basketProductsIcon","transparent","i","basketProductsSum","basketProductsQuantity","basketProductsTotalPrice","basketProductsBtns","basketProductsToMainLink","order","basketProductsPay"],"mappings":"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","file":"static/js/basket-page.2ac7c652.chunk.js","sourcesContent":["import React from 'react';\nimport style from './style.module.css';\nimport Button, { ButtonColors } from '../button';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n/* eslint-disable no-unused-vars */\n\nexport enum ModalWindowType {\n    onlyInformationType,\n    forBasket,\n}\n\ninterface ModalWindowProps {\n    modalText: string;\n    buttonText: string;\n    switchShowPopap: () => void;\n    handler: () => void;\n    type: ModalWindowType;\n}\n\nconst ModalWindow: React.FC<ModalWindowProps> = ({\n    modalText,\n    buttonText,\n    switchShowPopap,\n    handler,\n    type,\n}) => {\n    const { t } = useTranslation();\n    function commitHandler() {\n        switchShowPopap();\n        handler();\n    }\n\n    return (\n        <div>\n            <div className={style.modal}>\n                <p className={style.modalText}>{modalText}</p>\n                <Button\n                    onClick={commitHandler}\n                    colorScheme={ButtonColors.blue}\n                    className={style.buttonOffset}\n                >\n                    {buttonText}\n                </Button>\n                {type === ModalWindowType.forBasket && (\n                    <Button\n                        colorScheme={ButtonColors.lightgreen}\n                        className={style.buttonOffset}\n                        onClick={switchShowPopap}\n                    >\n                        {t('i18next.modalwindow.cancel')}\n                    </Button>\n                )}\n            </div>\n            <div className={style.overlay}></div>\n        </div>\n    );\n};\n\nexport default ModalWindow;\n\nModalWindow.propTypes = {\n    modalText: PropTypes.string.isRequired,\n    buttonText: PropTypes.string.isRequired,\n    switchShowPopap: PropTypes.func.isRequired,\n    handler: PropTypes.func.isRequired,\n    type: PropTypes.oneOf([\n        ModalWindowType.onlyInformationType,\n        ModalWindowType.forBasket,\n    ]).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__K5xBK\",\"buttonOffset\":\"style_buttonOffset__1106E\",\"overlay\":\"style_overlay__3brN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basket\":\"style_basket__2xAw8\",\"basketBody\":\"style_basketBody__2MPR8\",\"basketTitle\":\"style_basketTitle__3F8fl\",\"basketText\":\"style_basketText__2dCoG\",\"basketLink\":\"style_basketLink__3v_1R\",\"basketToMainLink\":\"style_basketToMainLink__10U81\",\"basketProductsTitle\":\"style_basketProductsTitle__2FRY7\",\"basketProductsSum\":\"style_basketProductsSum__2RSgV\",\"basketProductsQuantity\":\"style_basketProductsQuantity__3OUEi\",\"basketProductsTotalPrice\":\"style_basketProductsTotalPrice__QXsSm\",\"basketProductsBtns\":\"style_basketProductsBtns__3QObq\",\"basketProductsToMainLink\":\"style_basketProductsToMainLink__3vV8V\",\"basketProductsPay\":\"style_basketProductsPay__2Sk99\",\"container\":\"style_container__108OI\",\"buttonOffset\":\"style_buttonOffset__1t34i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basketProductsCard\":\"style_basketProductsCard__xQQIO\",\"basketProductsView\":\"style_basketProductsView__3Hwc-\",\"basketProductsImg\":\"style_basketProductsImg__2a051\",\"basketProductsDescription\":\"style_basketProductsDescription__2DvfN\",\"basketProductsCounting\":\"style_basketProductsCounting__23FSO\",\"basketProductsCount\":\"style_basketProductsCount__33Gsn\",\"basketProductsPrice\":\"style_basketProductsPrice__MrTBs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__2VXhH\",\"basket-products-minus\":\"style_basket-products-minus__1kRgL\",\"basket-products-plus\":\"style_basket-products-plus__giEh-\",\"basket-products-close\":\"style_basket-products-close__34JrL\"};","/* eslint-disable */\nexport enum BasketButtonTypes {\n    minus = 'basket-products-minus',\n    plus = 'basket-products-plus',\n    close = 'basket-products-close',\n}\n","import React from 'react';\nimport style from './style.module.css';\nimport cn from 'classnames';\nimport { BasketButtonTypes } from './model';\nimport PropTypes from 'prop-types';\n\ninterface BasketButtonProps\n    extends React.DetailedHTMLProps<\n        React.ButtonHTMLAttributes<HTMLButtonElement>,\n        HTMLButtonElement\n    > {\n    buttonType: BasketButtonTypes;\n    onClick?: () => void;\n    className?: string;\n}\n\nconst BasketButton: React.FC<BasketButtonProps> = ({\n    buttonType,\n    className,\n    onClick,\n    ...rest\n}) => {\n    return (\n        <button\n            {...rest}\n            onClick={onClick}\n            className={cn(style.main, style[buttonType], className)}\n        ></button>\n    );\n};\n\nBasketButton.propTypes = {\n    buttonType: PropTypes.oneOf([\n        BasketButtonTypes.minus,\n        BasketButtonTypes.plus,\n        BasketButtonTypes.close,\n    ]).isRequired,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default BasketButton;\n","import BasketButton from './basket-button';\nimport { BasketButtonTypes } from './model';\n\nexport default BasketButton;\n\nexport { BasketButtonTypes };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './style.module.css';\nimport { URLs } from '../../__data__/urls';\nimport BasketButton, {\n    BasketButtonTypes,\n} from '../../components/basket-button';\nimport { useDispatch } from 'react-redux';\n// import { chooseProductToSingleProductPage } from '../../__data__/actions/products';\nimport {\n    AllProducts,\n    deleteProductsGroup,\n    minusProductById,\n    plusProductById,\n} from '../../__data__/store/reducers/basket';\nimport { ProductsItem } from '../../__data__/store/reducers/products';\nimport PropTypes from 'prop-types';\nimport ModalWindow, { ModalWindowType } from '../modal-window';\nimport { useTranslation } from 'react-i18next';\n\ninterface BasketProductProps {\n    product: ProductsItem;\n    allProducts: AllProducts | AllProducts[];\n}\n\nconst BasketProduct: React.FC<BasketProductProps> = ({\n    product,\n    allProducts,\n}) => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const [modalWindowActive, changeModalWindowActive] = useState(false);\n\n    // function chooseProduct() {\n    //     dispatch(chooseProductToSingleProductPage(product));\n    // }\n\n    function minusProduct() {\n        dispatch(minusProductById(product.id));\n    }\n\n    function plusProduct() {\n        dispatch(plusProductById(product.id));\n    }\n\n    function showPopapDelete() {\n        changeModalWindowActive(!modalWindowActive);\n    }\n\n    function deleteProduct() {\n        showPopapDelete();\n        dispatch(deleteProductsGroup(product.id));\n    }\n\n    return (\n        <div className={style.basketProductsCard}>\n            <Link\n                to={`${URLs.product.url}/${product.id}`}\n                className={style.basketProductsView}\n                // onClick={chooseProduct}\n            >\n                <div className={style.basketProductsImg}>\n                    <img\n                        src={product.image}\n                        alt={\n                            localStorage.getItem('i18nextLng') === 'ru'\n                                ? product.title.ru\n                                : product.title.en\n                        }\n                    />\n                </div>\n                <div className={style.basketProductsDescription}>\n                    {localStorage.getItem('i18nextLng') === 'ru'\n                        ? product.title.ru\n                        : product.title.en}\n                </div>\n            </Link>\n\n            {modalWindowActive && (\n                <ModalWindow\n                    buttonText={t('i18next.basketproduct.delete')}\n                    modalText={t(\n                        'i18next.basketproduct.questionformodalwindow'\n                    )}\n                    switchShowPopap={showPopapDelete}\n                    handler={deleteProduct}\n                    type={ModalWindowType.forBasket}\n                />\n            )}\n\n            <div className={style.basketProductsCounting}>\n                <div className={style.basketProductsCount}>\n                    <BasketButton\n                        buttonType={BasketButtonTypes.minus}\n                        onClick={minusProduct}\n                    />\n                    <strong>\n                        {allProducts[product.id].productsById.length}\n                    </strong>\n                    <BasketButton\n                        buttonType={BasketButtonTypes.plus}\n                        onClick={plusProduct}\n                    />\n                </div>\n                <p className={style.basketProductsPrice}>\n                    <strong>\n                        {allProducts[product.id].totalPriceForThisGroup}\n                    </strong>\n                    <small>₽</small>\n                </p>\n                <BasketButton\n                    buttonType={BasketButtonTypes.close}\n                    onClick={showPopapDelete}\n                />\n            </div>\n        </div>\n    );\n};\n\nBasketProduct.propTypes = {\n    product: PropTypes.exact({\n        title: PropTypes.exact({\n            ru: PropTypes.string.isRequired,\n            en: PropTypes.string.isRequired,\n        }).isRequired,\n        price: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired,\n        image: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n        liked: PropTypes.bool.isRequired,\n    }).isRequired,\n    // allProducts: PropTypes.oneOfType([\n    //     PropTypes.exact({\n    //         productsById: PropTypes.array,\n    //         totalPriceForThisGroup: PropTypes.number,\n    //     }),\n    //     PropTypes.arrayOf(\n    //         PropTypes.exact({\n    //             productsById: PropTypes.array,\n    //             totalPriceForThisGroup: PropTypes.number,\n    //         })\n    //     ),\n    // ]).isRequired,\n};\n\nexport default BasketProduct;\n","import React, { useEffect, useState } from 'react';\nimport { URLs } from '../../__data__/urls';\nimport { Link } from 'react-router-dom';\nimport style from './style.module.css';\nimport { Button, ButtonColors } from '../../components';\nimport BasketIcon from '../../components/header/basket-icon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppStore } from '../../__data__/store/reducers';\nimport { AllProducts, clearBasket } from '../../__data__/store/reducers/basket';\nimport BasketProduct from '../../components/basket-product';\nimport ModalWindow, { ModalWindowType } from '../../components/modal-window';\nimport { useTranslation } from 'react-i18next';\nimport { useLocalStorageInBasket } from '../../utils';\n/* eslint-disable no-unused-vars */\n\nconst BasketPage: React.FC = () => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const isLoginFromReducer = useSelector<AppStore, boolean>(\n        ({ user }) => user.isLogin\n    );\n\n    useLocalStorageInBasket();\n\n    const allProducts = useSelector<AppStore, AllProducts | AllProducts[]>(\n        ({ basket }) => basket.allProducts\n    );\n\n    const totalCount = useSelector<AppStore, number>(\n        ({ basket }) => basket.totalCount\n    );\n    const totalPrice = useSelector<AppStore, number>(\n        ({ basket }) => basket.totalPrice\n    );\n\n    const productsByGroup = Object.keys(allProducts).map((key) => {\n        return allProducts[key].productsById[0];\n    });\n\n    const [isLogin, setIsLogin] = useState(false);\n\n    useEffect(() => {\n        setIsLogin(isLoginFromReducer);\n    }, [isLoginFromReducer]);\n\n    const [modalWindowActive, changeModalWindowActive] = useState(false);\n\n    function showPopapClear() {\n        changeModalWindowActive(!modalWindowActive);\n    }\n\n    function toClearBasket() {\n        showPopapClear();\n        dispatch(clearBasket());\n    }\n\n    return (\n        <div className={style.basket}>\n            <div className={style.container}>\n                <div className={style.basketBody}>\n                    {productsByGroup.length === 0 ? (\n                        !isLogin ? (\n                            <>\n                                <h3 className={style.basketTitle}>\n                                    {t('i18next.cart.empty')} 😕\n                                </h3>\n                                <p className={style.basketText}>\n                                    {t('i18next.cart.ifitemsincart')}\n                                </p>\n                                <Link\n                                    className={style.basketLink}\n                                    to={URLs.login.url}\n                                >\n                                    {t('i18next.cart.login')},\n                                </Link>\n                                <p className={style.basketText}>\n                                    {t('i18next.cart.toviewthelist')}.\n                                </p>\n                                <Link\n                                    to={URLs.main.url}\n                                    className={style.basketToMainLink}\n                                >\n                                    <Button\n                                        colorScheme={ButtonColors.green}\n                                        className={style.buttonOffset}\n                                    >\n                                        {t('i18next.cart.tothemain')}\n                                    </Button>\n                                </Link>\n                            </>\n                        ) : (\n                            <>\n                                <h3 className={style.basketTitle}>\n                                    {t('i18next.cart.empty')} 😕\n                                </h3>\n                                <Link\n                                    to={URLs.main.url}\n                                    className={style.basketToMainLink}\n                                >\n                                    <Button\n                                        colorScheme={ButtonColors.green}\n                                        className={style.buttonOffset}\n                                    >\n                                        {t('i18next.cart.tothemain')}\n                                    </Button>\n                                </Link>\n                            </>\n                        )\n                    ) : (\n                        <>\n                            {modalWindowActive && (\n                                <ModalWindow\n                                    buttonText={t('i18next.cart.clear')}\n                                    modalText={t(\n                                        'i18next.cart.questionformodalwindow'\n                                    )}\n                                    switchShowPopap={showPopapClear}\n                                    handler={toClearBasket}\n                                    type={ModalWindowType.forBasket}\n                                />\n                            )}\n                            <div className={style.basketProductsTitle}>\n                                <div className={style.basketProductsIcon}>\n                                    <BasketIcon />\n                                    <h3 className={style.basketTitle}>\n                                        {t('i18next.cart.title')}\n                                    </h3>\n                                </div>\n                                <Button\n                                    colorScheme={ButtonColors.transparent}\n                                    onClick={showPopapClear}\n                                >\n                                    {t('i18next.cart.removeall')}\n                                </Button>\n                            </div>\n                            {productsByGroup &&\n                                productsByGroup.map((product, i) => (\n                                    <BasketProduct\n                                        product={product}\n                                        allProducts={allProducts}\n                                        key={i}\n                                    />\n                                ))}\n                            <div className={style.basketProductsSum}>\n                                <div className={style.basketProductsQuantity}>\n                                    <span>{t('i18next.cart.totalitems')}:</span>\n                                    <strong>\n                                        {totalCount}{' '}\n                                        {totalCount === 1\n                                            ? t('i18next.cart.pc')\n                                            : t('i18next.cart.pcs')}\n                                        .\n                                    </strong>\n                                </div>\n                                <div className={style.basketProductsTotalPrice}>\n                                    <span>{t('i18next.cart.totalprice')}:</span>\n                                    <strong>{totalPrice}</strong>\n                                    <small>₽</small>\n                                </div>\n                            </div>\n                            <div className={style.basketProductsBtns}>\n                                <Link\n                                    to={URLs.main.url}\n                                    className={style.basketProductsToMainLink}\n                                >\n                                    {t('i18next.cart.tothemain')}\n                                </Link>\n                                <Link\n                                    to={URLs.order.url}\n                                    className={style.basketProductsPay}\n                                >\n                                    <Button\n                                        colorScheme={ButtonColors.blue}\n                                        className={style.basketProductsPay}\n                                    >\n                                        {t('i18next.cart.proceedtocheckout')}\n                                    </Button>\n                                </Link>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BasketPage;\n"],"sourceRoot":""}